<div class="container content">
	<p>
		Для подписки на события DOM и выполнения JavaScript-кода по их наступлении используйте \@ вместо on.
	</p>
	<docs.code type="html" :code="codeExamples.get('events')"></docs.code>
	<p>
		Результат:
	</p>
	<figure class="result">
		<examples.events.expression></examples.events.expression>
	</figure>
	<br>
	<h2 class="title">Обработчик</h2>
	<p>
		Логика обработчика события может быть довольно сложной, поэтому оставлять JavaScript-код в значении атрибута \@ не всегда возможно. В этом случае атрибут события может принять и название метода, который необходимо вызвать.
	</p>
	<docs.code type="html" :code="codeExamples.get('events-handler')"></docs.code>
	<p>
		Результат:
	</p>
	<figure class="result">
		<examples.events.method></examples.events.method>
	</figure>
	<br>
	<h2 class="title">Inline-обработчик</h2>
	<p>
		Кроме указания имени метода, можно использовать и JavaScript-выражения:
	</p>
	<docs.code type="html" :code="codeExamples.get('events-inline')"></docs.code>
	<p>
		Результат:
	</p>
	<figure class="result">
		<examples.events.inline></examples.events.inline>
	</figure>
	<p>
		Иногда в inline-обработчиках необходим доступ к оригинальному событию DOM. Его можно передать в метод, используя специальную переменную event
	</p>
	<docs.code type="html" :code="codeExamples.get('events-inline-args')"></docs.code>
</div>

<script>
export { Layout } from '@layouts/docs.sexy';

let codeExamples = new Map();

codeExamples.set('events', `
<button @click="counter(counter() + 1)">+1</button>
<p>Кнопка выше была нажата {{ counter }} раз</p>

<script>
let counter = o(1)
</script>
`);

codeExamples.set('events-handler', `
<button @click="greet">Поприветствовать</button>

<script>
function greet() {
	alert('Hey, are you Sexy enough?');
}
</script>
`);

codeExamples.set('events-inline', `
<button @click="say('hi')">Скажи hi</button>
<button @click="say('what')">Скажи what</button>

<script>
function say(text) {
	alert(text);
}
</script>
`);

codeExamples.set('events-inline-args', `
<button @click="warn('Форма не может быть отправлена.', event)">
  Отправить
</button>
`);


</script>