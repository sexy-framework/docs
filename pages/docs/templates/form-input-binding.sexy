<div class="container content">
	<p>
		Можно использовать директиву (bind) для двунаправленного связывания данных с элементами форм input, textarea и select. Способ обновления элемента выбирается автоматически в зависимости от типа элемента. Хотя (bind) и выглядит как нечто волшебное, в действительности это лишь синтаксический сахар для обновления данных в элементах ввода, с некоторыми поправками для исключительных случаев.
	</p>
	<p>
		Внутренне (bind) использует разные свойства и генерирует разные события для различных элементов ввода:
	</p>
	<ol type="1">
		<li>Элементы для ввода текста и многострочного текста используют свойство value и событие input</li>
		<li>Чекбоксы и радиокнопки используют свойство checked и событие change</li>
		<li>Выпадающие списки используют свойство value и событие change</li>
	</ol>
	<br>
	<h2 id="input">
		Input
	</h2>
	<docs.code type="html" :code="codeExamples.get('input')"></docs.code>
	<figure class="result">
		<examples.bind.input></examples.bind.input>
	</figure>
	<h2 id="textarea">
		Textarea
	</h2>
	<docs.code type="html" :code="codeExamples.get('input')"></docs.code>
	<figure class="result">
		<examples.bind.textarea></examples.bind.textarea>
	</figure>
	
</div>

<script>
export { Layout } from '@layouts/docs.sexy';

let codeExamples = new Map();

codeExamples.set('input', `
<input (bind)="message" placeholder="отредактируй меня">
<p>Введённое сообщение: {{ message }}</p>

<script>
import { bind } from 'sexy-framework/directives'

let message = o('');
</script>
`);

codeExamples.set('textarea', `
<span>Введённое многострочное сообщение:</span>
<p style="white-space: pre-line;">{{ message }}</p>
<br>
<textarea (bind)="message" placeholder="введите несколько строчек"></textarea>

<script>
import { bind } from 'sexy-framework/directives'

let message = o('');
</script>
`);



</script>