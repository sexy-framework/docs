<div class="container content">
	<p>
		Sexy даёт возможность разным образом анимировать переходы при обновлении объектов DOM, а также при их добавлении и удалении. Его инструменты дают возможность:
	</p>
	<ol type="1">
		<li>Автоматически применять CSS-классы для анимаций и переходов</li>
		<li>Создать свой обработчик анимации</li>
	</ol>
	<p>
		На этой странице мы рассмотрим только анимации появления и исчезновения элементов, а также анимации списков. В следующем разделе вы можете найти информацию об анимировании переходов между состояниями.
	</p>
	<p>
		Sexy располагает директивой transition, позволяющим анимировать появление и исчезновение элемента или компонента в следующих случаях:
	</p>
	<ol type="1">
		<li>Условная отрисовка (используя \@if)</li>
		<li>Отрисовка списка (используя \@each)</li>
		<li>Динамические компоненты</li>
	</ol>
	<p>
		Рассмотрим в действии простой пример:
	</p>
	<docs.code type="html" :code="codeExamples.get('example')"></docs.code>
	<p>
		Когда элемент, использующий transition, вставляется или удаляется, происходят следующие действия:
	</p>
	<ol type="1">
		<li>Sexy автоматически узнаёт, применены ли к целевому элементу CSS-переходы или анимации. Если да, соответствующие CSS-классы будут должным образом обновлены в нужные моменты времени.</li>
		<li>Если не обнаружено CSS-переходов и анимаций, операции DOM для вставки или удаления элемента будут выполнены непосредственно в следующем анимационном фрейме (важно: речь идёт об анимационном фрейме браузера, отличном от используемой в Sexy концепции nextTick).</li>
	</ol>
	<br>
	<h2 class="title">
		Классы переходов
	</h2>
	<p>
		Есть шесть классов, применяющихся в анимациях появления и исчезновения элементов:
	</p>

	<p>
		{name}-enter: Означает начало анимации появления элемента. Этот класс добавляется перед вставкой элемента, а удаляется в следующем фрейме после вставки.
	</p>

	<p>
		{name}-enter-active: Означает, что анимация появления элемента активна. Этот класс остаётся в течение всей анимации. Он добавляется перед вставкой элемента, а удаляется как только переход или анимация прекратились. Используйте его для установки длительности, задержки и плавности (easing curve) анимации появления.
	</p>

	<p>
		{name}-enter-to: Означает, что анимация появления элемента завершается. Класс добавляется в следующем фрейме после вставки элемента (тогда же, когда будет удалён {name}-enter ), удаляется после завершения перехода или анимации.
	</p>

	<p>
		{name}-leave: Означает начало анимации исчезновения элемента. Класс добавляется как только началась анимация исчезновения, а удаляется в следующем фрейме после этого.
	</p>

	<p>
		{name}-leave-active: Означает, что анимация исчезновения элемента активна. Этот класс остаётся в течение всей анимации. Он добавляется как только начинается анимация исчезновения, а удаляется как только переход или анимация прекратились. Используйте его для установки длительности, задержки и плавности (easing curve) анимации исчезновения.
	</p>

	<p>
		{name}-leave-to: Означает, что анимация исчезновения элемента завершается. Класс добавляется в следующем фрейме после начала анимации исчезновения (тогда же, когда будет удалён {name}-leave), а удаляется после завершения перехода или анимации.
	</p>
	
</div>

<script>
export { Layout } from '@layouts/docs.sexy';

let codeExamples = new Map();

codeExamples.set('example', `
<div transition:classed="fade">test</div>

<script>
import { classed } from 'sexy/transition'
</script>

<style>
.fade-enter-active,
.fade-leave-active {
	transition: opacity ease 250ms;
}

.fade-enter, .fade-leave-to {
	opacity: 0;
}
</style>
`);

</script>